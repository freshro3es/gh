package com.mycompany.gh;

import com.mycompany.gh.db.DataBase;
import com.mycompany.gh.db.PartDB;
import com.mycompany.gh.db.PartOrderDB;
import com.mycompany.gh.db.UserDB;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

public class AdminJFrame extends javax.swing.JFrame {
    
    DataBase dataBase = new DataBase();
    
    private DefaultComboBoxModel workTypemodel;
    private DefaultComboBoxModel workModel;
    private DefaultTableModel workTableModel = new DefaultTableModel();
    private DefaultTableModel partTableModel;
    private DefaultTableModel partOrderTableModel;
    private DefaultTableModel requestListModel;
    private DefaultTableModel usersTableModel = new DefaultTableModel();
    
    private static String name;
    private static String lastname;
    private static String login;
    private static String password;
    private static String role;
    
    private static int requestIdx;

    /**
     * Creates new form mainJFrame
     */
    public AdminJFrame(String[] param) {
        name = param[2];
        lastname = param[3];
        login = param[0];
        password = param[1];
        role = param[4];
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        main = new javax.swing.JPanel();
        tonAuto = new javax.swing.JLabel();
        expertMechanicsLabel = new javax.swing.JTextArea();
        marketYearsLabel = new javax.swing.JTextArea();
        guaranteesLabel = new javax.swing.JTextArea();
        newRecords = new javax.swing.JPanel();
        newRequestsLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        requestListTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        workTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        workTypeBox = new javax.swing.JComboBox<>();
        workBox = new javax.swing.JComboBox<>();
        addWorkButton = new javax.swing.JButton();
        orderCreateButton = new javax.swing.JButton();
        deleteWorkButton = new javax.swing.JButton();
        partsOrder = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        partsOrderTable = new javax.swing.JTable();
        deleteOrderButton = new javax.swing.JButton();
        partOrderLabel = new javax.swing.JLabel();
        updateOrderButton = new javax.swing.JButton();
        addPartOrderButton = new javax.swing.JButton();
        partsDB = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        partsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        addPartButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        adminPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        usersLabel = new javax.swing.JLabel();
        updateUsersButton = new javax.swing.JButton();
        roleAdminField = new javax.swing.JTextField();
        roleAdminLabel = new javax.swing.JLabel();
        saveUsersButton = new javax.swing.JButton();
        loginAdminLabel = new javax.swing.JLabel();
        loginAdminField = new javax.swing.JTextField();
        profile = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        lastnameField = new javax.swing.JTextField();
        lastnameLabel = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        loginLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        roleField = new javax.swing.JTextField();
        roleLabel = new javax.swing.JLabel();
        saveProfileButton = new javax.swing.JButton();
        quitProfileButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ТонАвто ИС");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        tonAuto.setFont(new java.awt.Font("Tw Cen MT", 0, 36)); // NOI18N
        tonAuto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tonAuto.setText("TonAuto");
        tonAuto.setBorder(new javax.swing.border.MatteBorder(null));
        tonAuto.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        expertMechanicsLabel.setEditable(false);
        expertMechanicsLabel.setColumns(20);
        expertMechanicsLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        expertMechanicsLabel.setRows(5);
        expertMechanicsLabel.setText("ОПЫТНЫЕ МАСТЕРА\n\nРегулярное повышение квалификации, \nобучение и современное оборудование \nпозволяют нам обеспечить высокое \nкачество исполнения любых работ по \nремонту автомобиля.");
        expertMechanicsLabel.setMargin(new java.awt.Insets(3, 10, 3, 10));

        marketYearsLabel.setEditable(false);
        marketYearsLabel.setColumns(20);
        marketYearsLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        marketYearsLabel.setRows(5);
        marketYearsLabel.setText("24 ГОДА НА РЫНКЕ\n\nЗа такой срок мы накопили огромный\nопыт в ремонте и обслуживании ино-\nмарок, автомобилей отечественного \nпроизводства и микроавтобусов.");
        marketYearsLabel.setAutoscrolls(false);
        marketYearsLabel.setMargin(new java.awt.Insets(3, 10, 3, 10));

        guaranteesLabel.setEditable(false);
        guaranteesLabel.setColumns(20);
        guaranteesLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        guaranteesLabel.setRows(5);
        guaranteesLabel.setText("ГАРАНТИЯ НА РЕМОНТ\nИ ЗАПЧАСТИ\n\nНа выполненные работы и запчасти мы \nпредоставляем гарантию до 1 года.");
        guaranteesLabel.setAutoscrolls(false);
        guaranteesLabel.setMargin(new java.awt.Insets(3, 10, 3, 10));

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addComponent(marketYearsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guaranteesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tonAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expertMechanicsLabel))
                .addContainerGap(250, Short.MAX_VALUE))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tonAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marketYearsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guaranteesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(expertMechanicsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );

        jTabbedPane1.addTab("Главная", main);

        newRecords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newRecordsMouseExited(evt);
            }
        });

        newRequestsLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        newRequestsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newRequestsLabel.setText("Новые записи");

        requestListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "№ заказа", "Имя", "Фамилия", "Телефон", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestListTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(requestListTable);

        workTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Тип работы", "Работа", "Длительность", "Стоимость"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(workTable);

        jLabel6.setText("Тип работы");

        jLabel7.setText("Работа");

        workTypeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workTypeBoxActionPerformed(evt);
            }
        });

        addWorkButton.setText("Добавить");
        addWorkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWorkButtonActionPerformed(evt);
            }
        });

        orderCreateButton.setText("Создать заказ");
        orderCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCreateButtonActionPerformed(evt);
            }
        });

        deleteWorkButton.setText("Удалить выделенное");
        deleteWorkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWorkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newRecordsLayout = new javax.swing.GroupLayout(newRecords);
        newRecords.setLayout(newRecordsLayout);
        newRecordsLayout.setHorizontalGroup(
            newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newRecordsLayout.createSequentialGroup()
                .addGroup(newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newRecordsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(newRequestsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(newRecordsLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane5)
                            .addGroup(newRecordsLayout.createSequentialGroup()
                                .addGroup(newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(workTypeBox, 0, 269, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(workBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addWorkButton, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(newRecordsLayout.createSequentialGroup()
                .addContainerGap(252, Short.MAX_VALUE)
                .addComponent(orderCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteWorkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(221, 221, 221))
        );
        newRecordsLayout.setVerticalGroup(
            newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newRecordsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newRequestsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addWorkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(newRecordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteWorkButton)
                    .addComponent(orderCreateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Новые записи", newRecords);

        partsOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название", "Тип", "Цена", "Количество", "Заказ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(partsOrderTable);

        deleteOrderButton.setText("Удалить деталь");
        deleteOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderButtonActionPerformed(evt);
            }
        });

        partOrderLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        partOrderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        partOrderLabel.setText("Заказ деталей");

        updateOrderButton.setText("Обновить");
        updateOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOrderButtonActionPerformed(evt);
            }
        });

        addPartOrderButton.setText("Добавить деталь");
        addPartOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPartOrderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout partsOrderLayout = new javax.swing.GroupLayout(partsOrder);
        partsOrder.setLayout(partsOrderLayout);
        partsOrderLayout.setHorizontalGroup(
            partsOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partsOrderLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(partsOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(partsOrderLayout.createSequentialGroup()
                        .addGroup(partsOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                            .addComponent(partOrderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78))
                    .addGroup(partsOrderLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(updateOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPartOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        partsOrderLayout.setVerticalGroup(
            partsOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, partsOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(partOrderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(partsOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPartOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Заказ деталей", partsOrder);

        partsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название", "Тип", "Цена", "Количество", "Заказ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(partsTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Склад деталей");

        updateButton.setText("Обновить");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        addPartButton.setText("Добавить деталь");
        addPartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPartButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Удалить деталь");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout partsDBLayout = new javax.swing.GroupLayout(partsDB);
        partsDB.setLayout(partsDBLayout);
        partsDBLayout.setHorizontalGroup(
            partsDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partsDBLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(partsDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(partsDBLayout.createSequentialGroup()
                        .addGroup(partsDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78))
                    .addGroup(partsDBLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPartButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        partsDBLayout.setVerticalGroup(
            partsDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, partsDBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(partsDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Склад деталей", partsDB);

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Имя", "Фамилия", "Логин", "Роль"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(usersTable);

        usersLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        usersLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usersLabel.setText("Пользователи");

        updateUsersButton.setText("Обновить");
        updateUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUsersButtonActionPerformed(evt);
            }
        });

        roleAdminLabel.setText("Роль");

        saveUsersButton.setText("Сохранить изменения");
        saveUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveUsersButtonActionPerformed(evt);
            }
        });

        loginAdminLabel.setText("Логин");

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addComponent(usersLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createSequentialGroup()
                        .addGap(0, 61, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(loginAdminField, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                        .addComponent(loginAdminLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(roleAdminField)
                        .addComponent(roleAdminLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateUsersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveUsersButton))
                .addGap(223, 223, 223))
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addComponent(updateUsersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveUsersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addComponent(loginAdminLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginAdminField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roleAdminLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roleAdminField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Админ-панель", adminPanel);

        nameLabel.setText("Имя");

        lastnameLabel.setText("Фамилия");

        loginLabel.setText("Логин");

        passwordLabel.setText("Пароль");

        roleLabel.setText("Роль");

        saveProfileButton.setText("Сохранить");
        saveProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveProfileButtonActionPerformed(evt);
            }
        });

        quitProfileButton.setText("Выйти");
        quitProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitProfileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(247, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(roleField)
                        .addComponent(roleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordField)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loginField)
                            .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lastnameField)
                            .addComponent(lastnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameField)
                            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(242, 242, 242))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(saveProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(quitProfileButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(nameLabel)
                .addGap(4, 4, 4)
                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastnameLabel)
                .addGap(4, 4, 4)
                .addComponent(lastnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginLabel)
                .addGap(4, 4, 4)
                .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLabel)
                .addGap(4, 4, 4)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roleLabel)
                .addGap(4, 4, 4)
                .addComponent(roleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveProfileButton)
                    .addComponent(quitProfileButton))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Профиль");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout profileLayout = new javax.swing.GroupLayout(profile);
        profile.setLayout(profileLayout);
        profileLayout.setHorizontalGroup(
            profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        profileLayout.setVerticalGroup(
            profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Профиль", profile);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //Функции класса
    private void updateUsers() {
        try {
            usersTableModel = new DefaultTableModel();
            int n = dataBase.count(
                    new String[] {login}, 
                    "SELECT count(*) " + 
                    "FROM \"user\" " + 
                    "WHERE email != ?"
            );
            Object[][] array = dataBase.getList(
                    n, 
                    4, 
                    new String[] {login}, 
                    "SELECT name, lastname, email, role " + 
                    "FROM \"user\" " + 
                    "WHERE email != ?"
            );
            Object[] columnsHeader = new String[] {"Имя", "Фамилия", "Логин", "Роль"};
            usersTableModel.setColumnIdentifiers(columnsHeader);
            for (int i = 0; i < array.length; i++)
                usersTableModel.addRow(array[i]);
            usersTable.setModel(usersTableModel);
        } catch (SQLException ex) {
            Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void updateOrder() {
        PartOrderDB parts = new PartOrderDB();
        Object[][] array = null;
        try {
            array = parts.getData();
            partOrderTableModel = new DefaultTableModel();
            Object[] columnsHeader = new String[] {"Название", "Тип", "Цена", "Количество", "Заказ"};
            partOrderTableModel.setColumnIdentifiers(columnsHeader);
            for (int i = 0; i < array.length; i++)
                partOrderTableModel.addRow(array[i]);
            partsOrderTable.setModel(partOrderTableModel);
        } catch (SQLException ex) {
            Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void deleteOrder() {
        int idx = partsOrderTable.getSelectedRow();
        String[] param = new String[5];
        for (int i = 0; i < 5; i++) {
            param[i] = (String) partsOrderTable.getValueAt(idx, i);
        }
        partOrderTableModel.removeRow(idx);
        PartOrderDB parts = new PartOrderDB();
        parts.deleteData(param);
    }
    
    private void updatePart() {
        PartDB parts = new PartDB();
        Object[][] array = null;
        try {
            array = parts.getData();
            partTableModel = new DefaultTableModel();
            Object[] columnsHeader = new String[] {"Название", "Тип", "Цена", "Количество", "Заказ"};
            partTableModel.setColumnIdentifiers(columnsHeader);
            for (int i = 0; i < array.length; i++) {
                partTableModel.addRow(array[i]);
            }
            partsTable.setModel(partTableModel);
        } catch (SQLException ex) {
            Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }
    
     private void deletePart() {
        int idx = partsTable.getSelectedRow();
        String[] param = new String[5]; 
        for (int i = 0; i < 5; i++) {
            param[i] = (String) partsTable.getValueAt(idx, i);
        }
        partTableModel.removeRow(idx);
        PartDB parts = new PartDB();
        parts.deleteData(param);
     }
     
     private void updateWork(String[] param) {
        try {
            int n = new DataBase().count(
                    param, 
                    "SELECT count(*) " + 
                    "FROM \"work\" INNER JOIN work_type ON \"work\".work_type_id=work_type.work_type_id " + 
                    "WHERE work_type_name=?"
            );
            Object[] array = new DataBase().getColumn(
                    n, 
                    param, 
                    "SELECT work_name " + 
                    "FROM \"work\" INNER JOIN work_type ON \"work\".work_type_id=work_type.work_type_id " +
                    "WHERE work_type_name=?"
            );
            workModel = new DefaultComboBoxModel();
            for (int i = 0; i < array.length; i++)
                workModel.addElement(array[i]);
            workBox.setModel(workModel);
        } catch (SQLException ex) {
            Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    private void updateWorkType() {
        try {
            int n = new DataBase().count("select count(*) from work_type");
            Object[] array = new DataBase().getColumn(n, "SELECT work_type_name FROM work_type");
            workTypemodel = new DefaultComboBoxModel();
            for (int i = 0; i < array.length; i++)
                workTypemodel.addElement(array[i]);
            workTypeBox.setModel(workTypemodel);
        } catch (SQLException ex) {
            Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     private void updateRequestList() {
        try {
            int n = new DataBase().count(
                    "SELECT count(*) FROM \"order\""
            );
            Object[][] array = new DataBase().getList(
                    n, 
                    6,  
                    "SELECT order_id, name, lastname, phone, email, status " + 
                    "FROM \"order\" " 
            );
            requestListModel = new DefaultTableModel();
            Object[] columnsHeader = new String[] {"№ заказа", "Имя", "Фамилия", "Телефон", "Email", "Статус"};
            requestListModel.setColumnIdentifiers(columnsHeader);
            for (int i = 0; i < array.length; i++)
                requestListModel.addRow(array[i]);
            requestListTable.setModel(requestListModel);
        } catch (SQLException ex) {
            Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        nameField.setText(name);
        lastnameField.setText(lastname);
        loginField.setText(login);
        passwordField.setText(password);
        roleField.setText(role);
        updateUsers();
        updateOrder();
        updatePart();
        updateRequestList();
        updateWorkType();
    }//GEN-LAST:event_formWindowOpened

    private void quitProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitProfileButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==quitProfileButton) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new LogInJFrame().setVisible(true);
                }
            });
            this.dispose();
        }
    }//GEN-LAST:event_quitProfileButtonActionPerformed

    private void saveProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveProfileButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==saveProfileButton) {
            dataBase.delete(
                    new String[] {login}, 
                    "DELETE FROM \"user\"" + 
                    "WHERE email=?"
            );
            dataBase.setRow(
                    new String[] {nameField.getText(), lastnameField.getText(), loginField.getText(), passwordField.getText(), role}, 
                    "INSERT INTO \"user\"(name, lastname, email, password, role)" + 
                    "VALUES(?, ?, ?, ?, ?)"
            );
//            new UserDB().add(nameField.getText(), lastnameField.getText(),
//                loginField.getText(), passwordField.getText(), role);
        }
    }//GEN-LAST:event_saveProfileButtonActionPerformed

    private void saveUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUsersButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==saveUsersButton) {
            int idx = usersTable.getSelectedRow();
            String login = loginAdminField.getText();
            String role = roleAdminField.getText();
            usersTableModel.setValueAt(role, idx, 3);
            new UserDB().setRole(login, role);
        }
    }//GEN-LAST:event_saveUsersButtonActionPerformed

    private void updateUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUsersButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==updateUsersButton) {
            updateUsers();
        }

    }//GEN-LAST:event_updateUsersButtonActionPerformed

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        // TODO add your handling code here:
        if (evt.getSource()==usersTable) {
            int idx = usersTable.getSelectedRow();
            loginAdminField.setText((String) usersTable.getValueAt(idx, 2));
            roleAdminField.setText((String) usersTable.getValueAt(idx, 3));
        }
    }//GEN-LAST:event_usersTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==deleteButton) {
            deletePart();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    //Обработчики событий
    
    private void addPartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPartButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==addPartButton) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new AddPartJFrame().setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_addPartButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==updateButton) {
            updatePart();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addPartOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPartOrderButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==addPartOrderButton) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    AddPartOrderJFrame addPart = new AddPartOrderJFrame();
                    addPart.setVisible(true);
                }
            });
            updateOrder();
        }
    }//GEN-LAST:event_addPartOrderButtonActionPerformed

    private void updateOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOrderButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==updateOrderButton) {
            updateOrder();
        }
    }//GEN-LAST:event_updateOrderButtonActionPerformed

    private void deleteOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderButtonActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()==deleteOrderButton) {
            deleteOrder();
        }
    }//GEN-LAST:event_deleteOrderButtonActionPerformed

    private void workTypeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workTypeBoxActionPerformed
        // TODO add your handling code here:
        String param = (String) workTypeBox.getSelectedItem();
        updateWork(new String[] {param});
    }//GEN-LAST:event_workTypeBoxActionPerformed

    private void addWorkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWorkButtonActionPerformed
        // TODO add your handling code here:
        Object[] array = null;
        String[] param = new String[] {(String) workTypeBox.getSelectedItem(), (String) workBox.getSelectedItem()};
        String query = "SELECT work_type_name, work_name, execution_duration, work_cost "
        + "FROM \"work\" INNER JOIN work_type ON "
        + "\"work\".work_type_id=work_type.work_type_id WHERE work_type_name=? and work_name=?";
        try {
            array = new DataBase().getRow(4, param, query);
        } catch (SQLException ex) {
            Logger.getLogger(ClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        workTableModel.addRow(array);
    }//GEN-LAST:event_addWorkButtonActionPerformed

    private void requestListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestListTableMouseClicked
        // TODO add your handling code here:
        int idx = requestListTable.getSelectedRow();
        requestIdx = requestListTable.getSelectedRow();
        System.out.println(idx);
        Vector<Vector> vector = requestListModel.getDataVector();
        int orderId = Integer.parseInt(vector.elementAt(idx).elementAt(0).toString());
        System.out.println(orderId);
        try {
            String query = "SELECT count(*)\n" +
                           "FROM order_work INNER JOIN work ON order_work.work_id=work.work_id\n" +
                           "WHERE order_id=?";
            int n = new DataBase().count(new int[] {orderId}, query);
            System.out.println(n);
            query = "SELECT work_type_name, work_name, execution_duration, work_cost " +
                    "FROM order_work INNER JOIN work ON order_work.work_id=work.work_id " + 
                    "INNER JOIN work_type ON work.work_type_id=work_type.work_type_id " +
                    "WHERE order_id=?";
            Object[][] array = new DataBase().getList(n, 4, new int[] {orderId}, query);
            workTableModel = new DefaultTableModel();
            Object[] columnsHeader = new String[] {"Тип работы", "Работа", "Длительность", "Стоимость"};
            workTableModel.setColumnIdentifiers(columnsHeader);
            for (int i = 0; i < array.length; i++) {
                for (int j=0; j<array[i].length; j++) {
                    System.out.println(array[i][j]);
                }   
                workTableModel.addRow(array[i]);
            }    
            workTable.setModel(workTableModel);
        } catch (SQLException ex) {
            Logger.getLogger(ClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_requestListTableMouseClicked

    private void deleteWorkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWorkButtonActionPerformed
        // TODO add your handling code here:
        int idx = workTable.getSelectedRow();
        workTableModel.removeRow(idx);
    }//GEN-LAST:event_deleteWorkButtonActionPerformed

    private void orderCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCreateButtonActionPerformed
        // TODO add your handling code here:
        String[] param = null;
        requestIdx+=1;
        try {
            param = dataBase.getRow(
                    5,
                    new int[] {requestIdx},
                    "SELECT login, name, lastname, phone, email " +
                    "FROM \"order\" " +
                    "WHERE order_id=?"
            );
        } catch (SQLException ex) {
            Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        dataBase.delete(
                new int[] {requestIdx}, 
                "DELETE FROM \"order\" " + 
                "WHERE order_id=? "
        );
        dataBase.delete(
                new int[] {requestIdx}, 
                "DELETE FROM order_work " + 
                "WHERE order_id=? "
        );
        
        new DataBase().setRow(
                param, 
                "INSERT INTO \"order\"(login, name, lastname, phone, email, status) " + 
                "VALUES(?, ?, ?, ?, ?, 'Заказ')"
        );
        int orderId = new DataBase().getItem(
                new String[] {param[0]}, 
                "SELECT MAX(order_id) " + 
                "FROM \"order\" " + 
                "WHERE login=? AND status='Заказ'");
        
        Object[] array = new Object[workTableModel.getColumnCount()];
        Vector<Vector> vector = workTableModel.getDataVector();
        
        for (int i = 0; i < workTableModel.getRowCount(); i++) {
            for (int j = 0; j < workTableModel.getColumnCount(); j++) {
                array[j] = vector.elementAt(i).elementAt(j);
            }
            int workId = new DataBase().getItem(new String[] {array[1].toString()}, "SELECT work_id FROM work WHERE work_name=?");
            new DataBase().setRow(new int[] {orderId, workId}, "INSERT INTO order_work (order_id, work_id, status)\n" +
                    "VALUES (?, ?, 'Не выполнена')");
        }
        newRequestsLabel.setText("Запись создана!");
    }//GEN-LAST:event_orderCreateButtonActionPerformed

    private void newRecordsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newRecordsMouseExited
        // TODO add your handling code here:
        newRequestsLabel.setText("Новые записи");
        updateRequestList();
    }//GEN-LAST:event_newRecordsMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
 //               new AdminJFrame().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPartButton;
    private javax.swing.JButton addPartOrderButton;
    private javax.swing.JButton addWorkButton;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteOrderButton;
    private javax.swing.JButton deleteWorkButton;
    private javax.swing.JTextArea expertMechanicsLabel;
    private javax.swing.JTextArea guaranteesLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lastnameField;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JTextField loginAdminField;
    private javax.swing.JLabel loginAdminLabel;
    private javax.swing.JTextField loginField;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel main;
    private javax.swing.JTextArea marketYearsLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel newRecords;
    private javax.swing.JLabel newRequestsLabel;
    private javax.swing.JButton orderCreateButton;
    private javax.swing.JLabel partOrderLabel;
    private javax.swing.JPanel partsDB;
    private javax.swing.JPanel partsOrder;
    private javax.swing.JTable partsOrderTable;
    private javax.swing.JTable partsTable;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel profile;
    private javax.swing.JButton quitProfileButton;
    private javax.swing.JTable requestListTable;
    private javax.swing.JTextField roleAdminField;
    private javax.swing.JLabel roleAdminLabel;
    private javax.swing.JTextField roleField;
    private javax.swing.JLabel roleLabel;
    private javax.swing.JButton saveProfileButton;
    private javax.swing.JButton saveUsersButton;
    private javax.swing.JLabel tonAuto;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton updateOrderButton;
    private javax.swing.JButton updateUsersButton;
    private javax.swing.JLabel usersLabel;
    private javax.swing.JTable usersTable;
    private javax.swing.JComboBox<String> workBox;
    private javax.swing.JTable workTable;
    private javax.swing.JComboBox<String> workTypeBox;
    // End of variables declaration//GEN-END:variables
}
